{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beto HJ\\\\Documents\\\\Trapape\\\\react\\\\trapape\\\\src\\\\routes\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\n  const onSubmit = async event => {\n    event.preventDefault();\n\n    // validate the inputs\n    if (!email || !password || !repeatPassword) {\n      setError(\"Please fill out all the fields.\");\n      return;\n    }\n    if (password !== repeatPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n\n    // clear the errors\n    setError(\"\");\n\n    // TODO: send the register request\n    console.log(\"Registering...\");\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    sx: {\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      component: \"h1\",\n      gutterBottom: true,\n      textAlign: \"center\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        my: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        variant: \"outlined\",\n        autoComplete: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        sx: {\n          mt: 1\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        variant: \"outlined\",\n        type: \"password\",\n        autoComplete: \"new-password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        sx: {\n          mt: 3\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Repeat password\",\n        variant: \"outlined\",\n        type: \"password\",\n        autoComplete: \"repeat-new-password\",\n        value: repeatPassword,\n        onChange: e => setRepeatPassword(e.target.value),\n        sx: {\n          mt: 3\n        },\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        sx: {\n          mt: 3\n        },\n        fullWidth: true,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"9RnyCSKXhVBRhpSbBeZj7BxeH/c=\", true);\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["Register","_s","navigate","useNavigate","error","setError","useState","email","setEmail","password","setPassword","repeatPassword","setRepeatPassword","onSubmit","event","preventDefault","console","log","_jsxDEV","Container","maxWidth","sx","mt","children","Typography","variant","component","gutterBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","Alert","severity","my","Box","TextField","label","autoComplete","value","onChange","e","target","fullWidth","type","Button","Link","href","_c","$RefreshReg$"],"sources":["C:/Users/Beto HJ/Documents/Trapape/react/trapape/src/routes/register.jsx"],"sourcesContent":["export default function Register() {\r\n  const navigate = useNavigate();\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repeatPassword, setRepeatPassword] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // validate the inputs\r\n    if (!email || !password || !repeatPassword) {\r\n      setError(\"Please fill out all the fields.\");\r\n      return;\r\n    }\r\n    if (password !== repeatPassword) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    // clear the errors\r\n    setError(\"\");\r\n\r\n    // TODO: send the register request\r\n    console.log(\"Registering...\");\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" sx={{mt: 2}}>\r\n      <Typography variant=\"h5\" component=\"h1\" gutterBottom textAlign=\"center\">\r\n        Register\r\n      </Typography>\r\n      {error && <Alert severity=\"error\" sx={{my: 2}}>{error}</Alert>}\r\n      <Box component=\"form\" onSubmit={onSubmit}>\r\n        <TextField\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          autoComplete=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          sx={{mt: 1}}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          autoComplete=\"new-password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          sx={{mt: 3}}\r\n          fullWidth\r\n        />\r\n        <TextField\r\n          label=\"Repeat password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          autoComplete=\"repeat-new-password\"\r\n          value={repeatPassword}\r\n          onChange={(e) => setRepeatPassword(e.target.value)}\r\n          sx={{mt: 3}}\r\n          fullWidth\r\n        />\r\n        <Button variant=\"contained\" type=\"submit\" sx={{mt: 3}} fullWidth>Register</Button>\r\n        <Box sx={{mt: 2}}>\r\n          Already have an account? <Link href=\"/login\">Login</Link>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  )\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}