{"ast":null,"code":"export const startSession = user => {\n  console.log(user);\n  Object.entries(user).forEach(_ref => {\n    let [key, value] = _ref;\n    if (key === 'auth') {\n      Object.entries(user.auth).forEach(_ref2 => {\n        let [key, value] = _ref2;\n      });\n    } else if (key === 'metadata') {\n      Object.entries(user).forEach(_ref3 => {\n        let [key, value] = _ref3;\n      });\n    }\n    if (key === 'proactiveRefresh') {\n      Object.entries(user).forEach(_ref4 => {\n        let [key, value] = _ref4;\n      });\n    }\n    if (key === 'providerData') {\n      Object.entries(user).forEach(_ref5 => {\n        let [key, value] = _ref5;\n      });\n    }\n    if (key === 'reloadUserInfo') {\n      Object.entries(user).forEach(_ref6 => {\n        let [key, value] = _ref6;\n      });\n    }\n    if (key === 'stsTokenManager') {\n      Object.entries(user).forEach(_ref7 => {\n        let [key, value] = _ref7;\n      });\n    } else {\n      sessionStorage.setItem(key, value);\n    }\n  });\n\n  /*sessionStorage.setItem(\"uid\", user.uid);\r\n  sessionStorage.setItem(\"email\", user.email);\r\n  sessionStorage.setItem(\"emailVerified\", user.emailVerified);\r\n  sessionStorage.setItem(\"displayName\", user.providerData[0]); //\r\n  /*sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"email\", user.email);\r\n  sessionStorage.setItem(\"accessToken\", user.accessToken);*/\n};\n\nexport const getSession = () => {\n  return {\n    sessionStorage\n  };\n};\nexport const endSession = () => {\n  sessionStorage.clear();\n};\nexport const isLoggedIn = () => {\n  return getSession().accessToken;\n};","map":{"version":3,"names":["startSession","user","console","log","Object","entries","forEach","_ref","key","value","auth","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","sessionStorage","setItem","getSession","endSession","clear","isLoggedIn","accessToken"],"sources":["C:/Users/Beto HJ/Documents/Trapape/react/trapape/src/utils/session.js"],"sourcesContent":["export const startSession = (user) => {\r\n    console.log(user);\r\n    Object.entries(user).forEach(([key, value]) => {\r\n      if (key === 'auth') {\r\n        Object.entries(user.auth).forEach(([key, value]) => {\r\n          \r\n        });\r\n      }\r\n      else if (key === 'metadata') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'proactiveRefresh') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'providerData') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'reloadUserInfo') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'stsTokenManager') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      else{\r\n        sessionStorage.setItem(key, value);\r\n      }\r\n    });\r\n    \r\n    /*sessionStorage.setItem(\"uid\", user.uid);\r\n    sessionStorage.setItem(\"email\", user.email);\r\n    sessionStorage.setItem(\"emailVerified\", user.emailVerified);\r\n    sessionStorage.setItem(\"displayName\", user.providerData[0]); //\r\n    /*sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"email\", user.email);\r\n    sessionStorage.setItem(\"accessToken\", user.accessToken);*/\r\n  }\r\n  \r\n  export const getSession = () => {\r\n    return {\r\n      sessionStorage\r\n    }\r\n  }\r\n  \r\n  export const endSession = () => {\r\n    sessionStorage.clear();\r\n  }\r\n  \r\n  export const isLoggedIn = () => {\r\n    return getSession().accessToken;\r\n  }"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAK;EAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjBG,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACC,IAAA,IAAkB;IAAA,IAAjB,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAAF,IAAA;IACxC,IAAIC,GAAG,KAAK,MAAM,EAAE;MAClBJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAACS,IAAI,CAAC,CAACJ,OAAO,CAACK,KAAA,IAAkB;QAAA,IAAjB,CAACH,GAAG,EAAEC,KAAK,CAAC,GAAAE,KAAA;MAE/C,CAAC,CAAC;IACJ,CAAC,MACI,IAAIH,GAAG,KAAK,UAAU,EAAE;MAC3BJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACM,KAAA,IAAkB;QAAA,IAAjB,CAACJ,GAAG,EAAEC,KAAK,CAAC,GAAAG,KAAA;MAAM,CAAC,CAAC;IACpD;IACA,IAAIJ,GAAG,KAAK,kBAAkB,EAAE;MAC9BJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACO,KAAA,IAAkB;QAAA,IAAjB,CAACL,GAAG,EAAEC,KAAK,CAAC,GAAAI,KAAA;MAAM,CAAC,CAAC;IACpD;IACA,IAAIL,GAAG,KAAK,cAAc,EAAE;MAC1BJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACQ,KAAA,IAAkB;QAAA,IAAjB,CAACN,GAAG,EAAEC,KAAK,CAAC,GAAAK,KAAA;MAAM,CAAC,CAAC;IACpD;IACA,IAAIN,GAAG,KAAK,gBAAgB,EAAE;MAC5BJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACS,KAAA,IAAkB;QAAA,IAAjB,CAACP,GAAG,EAAEC,KAAK,CAAC,GAAAM,KAAA;MAAM,CAAC,CAAC;IACpD;IACA,IAAIP,GAAG,KAAK,iBAAiB,EAAE;MAC7BJ,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAACK,OAAO,CAACU,KAAA,IAAkB;QAAA,IAAjB,CAACR,GAAG,EAAEC,KAAK,CAAC,GAAAO,KAAA;MAAM,CAAC,CAAC;IACpD,CAAC,MACG;MACFC,cAAc,CAACC,OAAO,CAACV,GAAG,EAAEC,KAAK,CAAC;IACpC;EACF,CAAC,CAAC;;EAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC;;AAED,OAAO,MAAMU,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO;IACLF;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAM;EAC9BH,cAAc,CAACI,KAAK,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAOH,UAAU,CAAC,CAAC,CAACI,WAAW;AACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}