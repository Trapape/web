{"ast":null,"code":"export const startSession = user => {\n  sessionStorage.setItem('user', JSON.stringify(user));\n  /*console.log(user);\r\n  Object.entries(user).forEach(([key, value]) => {\r\n    /*if (key === 'auth') {\r\n      Object.entries(user.auth).forEach(([keyauth, valueauth]) => {\r\n        \r\n      });\r\n    }\r\n    else if (key === 'metadata') {\r\n      Object.entries(user).forEach(([key, value]) => {});\r\n    }\r\n    if (key === 'proactiveRefresh') {\r\n      Object.entries(user).forEach(([key, value]) => {});\r\n    }\r\n    if (key === 'providerData') {\r\n      Object.entries(user).forEach(([key, value]) => {});\r\n    }\r\n    if (key === 'reloadUserInfo') {\r\n      Object.entries(user).forEach(([key, value]) => {});\r\n    }\r\n    if (key === 'stsTokenManager') {\r\n      Object.entries(user).forEach(([key, value]) => {});\r\n    }\r\n    else{\r\n      sessionStorage.setItem(key, value);\r\n    }\r\n    sessionStorage.setItem(key, value);\r\n  });/\r\n  \r\n  /*sessionStorage.setItem(\"uid\", user.uid);\r\n  sessionStorage.setItem(\"email\", user.email);\r\n  sessionStorage.setItem(\"emailVerified\", user.emailVerified);\r\n  sessionStorage.setItem(\"displayName\", user.providerData[0]); //\r\n  /*sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"\", user.);\r\n  sessionStorage.setItem(\"email\", user.email);\r\n  sessionStorage.setItem(\"accessToken\", user.accessToken);*/\n};\n\nexport const getSession = () => {\n  const storedUser = sessionStorage.getItem('user');\n  const user = JSON.parse(storedUser);\n  return {\n    user\n  };\n};\nexport const endSession = () => {\n  sessionStorage.clear();\n};\nexport const isLoggedIn = () => {\n  console.log(getSession().user);\n  return getSession().stsTokenManager.accessToken;\n};","map":{"version":3,"names":["startSession","user","sessionStorage","setItem","JSON","stringify","getSession","storedUser","getItem","parse","endSession","clear","isLoggedIn","console","log","stsTokenManager","accessToken"],"sources":["C:/Users/Beto HJ/Documents/Trapape/react/trapape/src/utils/session.js"],"sourcesContent":["export const startSession = (user) => {\r\n  sessionStorage.setItem('user', JSON.stringify(user));\r\n    /*console.log(user);\r\n    Object.entries(user).forEach(([key, value]) => {\r\n      /*if (key === 'auth') {\r\n        Object.entries(user.auth).forEach(([keyauth, valueauth]) => {\r\n          \r\n        });\r\n      }\r\n      else if (key === 'metadata') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'proactiveRefresh') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'providerData') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'reloadUserInfo') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      if (key === 'stsTokenManager') {\r\n        Object.entries(user).forEach(([key, value]) => {});\r\n      }\r\n      else{\r\n        sessionStorage.setItem(key, value);\r\n      }\r\n      sessionStorage.setItem(key, value);\r\n    });/\r\n    \r\n    /*sessionStorage.setItem(\"uid\", user.uid);\r\n    sessionStorage.setItem(\"email\", user.email);\r\n    sessionStorage.setItem(\"emailVerified\", user.emailVerified);\r\n    sessionStorage.setItem(\"displayName\", user.providerData[0]); //\r\n    /*sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"\", user.);\r\n    sessionStorage.setItem(\"email\", user.email);\r\n    sessionStorage.setItem(\"accessToken\", user.accessToken);*/\r\n  }\r\n  \r\n  export const getSession = () => {\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const user = JSON.parse(storedUser);\r\n    return {\r\n      user\r\n    }\r\n  }\r\n  \r\n  export const endSession = () => {\r\n    sessionStorage.clear();\r\n  }\r\n  \r\n  export const isLoggedIn = () => {\r\n    console.log(getSession().user)\r\n    return getSession().stsTokenManager.accessToken;\r\n  }"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAIC,IAAI,IAAK;EACpCC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EAClD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC;;AAED,OAAO,MAAMK,UAAU,GAAGA,CAAA,KAAM;EAC9B,MAAMC,UAAU,GAAGL,cAAc,CAACM,OAAO,CAAC,MAAM,CAAC;EACjD,MAAMP,IAAI,GAAGG,IAAI,CAACK,KAAK,CAACF,UAAU,CAAC;EACnC,OAAO;IACLN;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMS,UAAU,GAAGA,CAAA,KAAM;EAC9BR,cAAc,CAACS,KAAK,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9BC,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC,CAAC,CAACL,IAAI,CAAC;EAC9B,OAAOK,UAAU,CAAC,CAAC,CAACS,eAAe,CAACC,WAAW;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}