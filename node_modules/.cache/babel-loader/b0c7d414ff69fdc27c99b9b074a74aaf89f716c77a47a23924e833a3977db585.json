{"ast":null,"code":"import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\n\n// Create a reference to the file we want to download\nconst storage = getStorage();\nexport const downloadStorage = path => {\n  const starsRef = ref(storage, path);\n  return new Promise((resolve, reject) => {\n    // Get the download URL\n    getDownloadURL(starsRef).then(url => {\n      resolve(url); // Resuelve la promesa con la URL\n    }).catch(error => {\n      // A full list of error codes is available at\n      // https://firebase.google.com/docs/storage/web/handle-errors\n      switch (error.code) {\n        case \"storage/object-not-found\":\n          console.log(\"File doesn't exist\");\n          break;\n        case \"storage/unauthorized\":\n          console.log(\"User doesn't have permission to access the object\");\n          break;\n        case \"storage/canceled\":\n          console.log(\"User canceled the upload\");\n          break;\n        case \"storage/unknown\":\n          console.log(\"Unknown error occurred, inspect the server response\");\n          break;\n        default:\n          console.log(error);\n      }\n      reject(error); // Rechaza la promesa con el error\n    });\n  });\n};\n\nexport const uploadStorage = path => {};","map":{"version":3,"names":["getStorage","ref","getDownloadURL","storage","downloadStorage","path","starsRef","Promise","resolve","reject","then","url","catch","error","code","console","log","uploadStorage"],"sources":["C:/Users/Beto HJ/Documents/Trapape/react/trapape/src/utils/firebaseStorage.js"],"sourcesContent":["import { getStorage, ref, getDownloadURL } from \"firebase/storage\";\r\n\r\n// Create a reference to the file we want to download\r\nconst storage = getStorage();\r\n\r\nexport const downloadStorage = (path) => {\r\n  const starsRef = ref(storage, path);\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    // Get the download URL\r\n    getDownloadURL(starsRef)\r\n      .then((url) => {\r\n        resolve(url); // Resuelve la promesa con la URL\r\n      })\r\n      .catch((error) => {\r\n        // A full list of error codes is available at\r\n        // https://firebase.google.com/docs/storage/web/handle-errors\r\n        switch (error.code) {\r\n          case \"storage/object-not-found\":\r\n            console.log(\"File doesn't exist\");\r\n            break;\r\n          case \"storage/unauthorized\":\r\n            console.log(\"User doesn't have permission to access the object\");\r\n            break;\r\n          case \"storage/canceled\":\r\n            console.log(\"User canceled the upload\");\r\n            break;\r\n          case \"storage/unknown\":\r\n            console.log(\"Unknown error occurred, inspect the server response\");\r\n            break;\r\n          default:\r\n            console.log(error);\r\n        }\r\n        \r\n        reject(error); // Rechaza la promesa con el error\r\n      });\r\n  });\r\n};\r\n\r\nexport const uploadStorage = (path) => {\r\n  \r\n}"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;;AAElE;AACA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;AAE5B,OAAO,MAAMI,eAAe,GAAIC,IAAI,IAAK;EACvC,MAAMC,QAAQ,GAAGL,GAAG,CAACE,OAAO,EAAEE,IAAI,CAAC;EAEnC,OAAO,IAAIE,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACAP,cAAc,CAACI,QAAQ,CAAC,CACrBI,IAAI,CAAEC,GAAG,IAAK;MACbH,OAAO,CAACG,GAAG,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACA;MACA,QAAQA,KAAK,CAACC,IAAI;QAChB,KAAK,0BAA0B;UAC7BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;UACjC;QACF,KAAK,sBAAsB;UACzBD,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;UAChE;QACF,KAAK,kBAAkB;UACrBD,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;UACvC;QACF,KAAK,iBAAiB;UACpBD,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;UAClE;QACF;UACED,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACtB;MAEAJ,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;;AAED,OAAO,MAAMI,aAAa,GAAIZ,IAAI,IAAK,CAEvC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}